name: Test

on: [push, pull_request]

jobs:
  build:
    # Prevent duplicate builds on internal PRs.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        protobuf-version:
          - "4.23.4"
          - "5.29.3"
        websockets-version:
          - "14.2"
          - "15.0"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup docker
        if: matrix.os == 'macos-latest'
        uses: crazy-max/ghaction-setup-docker@v3

      - name: Start Centrifugo
        run: docker run -d -p 8000:8000 -e CENTRIFUGO_CLIENT_TOKEN_HMAC_SECRET_KEY="secret" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_ALLOWED_DELTA_TYPES="fossil" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_DELTA_PUBLISH="true" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_PRESENCE="true" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_JOIN_LEAVE="true" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_FORCE_PUSH_JOIN_LEAVE="true" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_HISTORY_SIZE="100" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_HISTORY_TTL="300s" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_FORCE_RECOVERY="true" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_ALLOW_PUBLISH_FOR_SUBSCRIBER="true" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_ALLOW_PRESENCE_FOR_SUBSCRIBER="true" -e CENTRIFUGO_CHANNEL_WITHOUT_NAMESPACE_ALLOW_HISTORY_FOR_SUBSCRIBER="true" -e CENTRIFUGO_CLIENT_SUBSCRIBE_TO_USER_PERSONAL_CHANNEL_ENABLED="true" -e CENTRIFUGO_LOG_LEVEL="trace" centrifugo/centrifugo:v6 centrifugo

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install "protobuf==${{ matrix.protobuf-version }}"
          pip install "websockets==${{ matrix.websockets-version }}"
          make dev

      - name: Run tests
        run: |
          make test

      - name: Run linter
        run: |
          make lint-ci
